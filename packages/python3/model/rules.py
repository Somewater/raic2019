from .arena import *


class Rules:
    def __init__(self, json):
        self.max_tick_count: int = json.get("max_tick_count")
        self.arena: Arena = Arena(json.get("arena"))
        self.team_size: int = json.get("team_size")
        self.seed: int = json.get("seed")
        self.ROBOT_MIN_RADIUS: float = json.get("ROBOT_MIN_RADIUS")
        self.ROBOT_MAX_RADIUS: float = json.get("ROBOT_MAX_RADIUS")
        self.ROBOT_MAX_JUMP_SPEED: float = json.get("ROBOT_MAX_JUMP_SPEED")
        self.ROBOT_ACCELERATION: float = json.get("ROBOT_ACCELERATION")
        self.ROBOT_NITRO_ACCELERATION: float = json.get("ROBOT_NITRO_ACCELERATION")
        self.ROBOT_MAX_GROUND_SPEED: float = json.get("ROBOT_MAX_GROUND_SPEED")
        self.ROBOT_ARENA_E: float = json.get("ROBOT_ARENA_E")
        self.ROBOT_RADIUS: float = json.get("ROBOT_RADIUS")
        self.ROBOT_MASS: float = json.get("ROBOT_MASS")
        self.TICKS_PER_SECOND: float = json.get("TICKS_PER_SECOND")
        self.MICROTICKS_PER_TICK: int = json.get("MICROTICKS_PER_TICK")
        self.RESET_TICKS: int = json.get("RESET_TICKS")
        self.BALL_ARENA_E: float = json.get("BALL_ARENA_E")
        self.BALL_RADIUS: float = json.get("BALL_RADIUS")
        self.BALL_MASS: float = json.get("BALL_MASS")
        self.MIN_HIT_E: float = json.get("MIN_HIT_E")
        self.MAX_HIT_E: float = json.get("MAX_HIT_E")
        self.MAX_ENTITY_SPEED: float = json.get("MAX_ENTITY_SPEED")
        self.MAX_NITRO_AMOUNT: float = json.get("MAX_NITRO_AMOUNT")
        self.START_NITRO_AMOUNT: float = json.get("START_NITRO_AMOUNT")
        self.NITRO_POINT_VELOCITY_CHANGE: float = json.get("NITRO_POINT_VELOCITY_CHANGE")
        self.NITRO_PACK_X: float = json.get("NITRO_PACK_X")
        self.NITRO_PACK_Y: float = json.get("NITRO_PACK_Y")
        self.NITRO_PACK_Z: float = json.get("NITRO_PACK_Z")
        self.NITRO_PACK_RADIUS: float = json.get("NITRO_PACK_RADIUS")
        self.NITRO_PACK_AMOUNT: float = json.get("NITRO_PACK_AMOUNT")
        self.NITRO_PACK_RESPAWN_TICKS: int = json.get("NITRO_PACK_RESPAWN_TICKS")
        self.GRAVITY: float = json.get("GRAVITY")
